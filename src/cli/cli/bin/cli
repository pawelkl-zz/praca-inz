#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'cli_version'

include GLI

program_desc 'AutoFileManager'

version Cli::VERSION

# [URL]
# [REFE RER]
# [COOKIE] just cookie
# [FNAME] suggested file name
# [POST] post data
# [ULIST] url list
# [UFILE] url list file
# [CFILE] cookie.txt file
# [USERPASS] user:password
# [UA] useragent

# C:\Dropbox\#code\praca-inz\src\cli\cli\bin\cli
# [URL]
# -ref=[REFERER]
# -cookie=[COOKIE]
# -dest=[FOLDER]
# -file=[FNAME]
# -post=[POST]
# -urllist=[ULIST]
# -urlfile=[UFILE]
# -cookiefile=[CFILE]
# -cred=[USERPASS]

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the arguments'
flag [:f,:flagname]

desc 'Describe list here'
arg_name 'Describe arguments to list here'
command :list do |c|
  c.desc 'Describe a switch to list'
  c.switch :s

  c.desc 'Describe a flag to list'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|

    # Your command logic here

    # If you have any errors, just raise them
    # raise "that command made no sense"
  end
end

desc 'Describe add here'
arg_name 'Describe arguments to add here'
command :add do |c|
  c.action do |global_options,options,args|
  end
end

desc 'Describe complete here'
arg_name 'Describe arguments to complete here'
command :complete do |c|
  c.action do |global_options,options,args|
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
